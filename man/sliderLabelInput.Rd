% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/input-sliderLabel.R
\name{sliderLabelInput}
\alias{sliderLabelInput}
\title{Slider Label Input Widget}
\usage{
sliderLabelInput(inputId, label, choices, selected = NULL,
  animate = FALSE, grid = FALSE, hide_min_max = FALSE,
  from_fixed = FALSE, to_fixed = FALSE, from_min = NULL,
  from_max = NULL, to_min = NULL, to_max = NULL,
  force_edges = FALSE, width = NULL, pre = NULL, post = NULL,
  dragRange = TRUE)
}
\arguments{
\item{inputId}{The \code{input} slot that will be used to access the value.}

\item{label}{Display label for the control, or \code{NULL} for no label.}

\item{choices}{Named numeric vector}

\item{selected}{The initially selected numeric values, if length > 1, create a range slider.}

\item{animate}{TRUE to show simple animation controls with default settings, for more details see \code{\link[shiny]{sliderInput}}.}

\item{grid}{Logical, show or hide ticks marks.}

\item{hide_min_max}{Hides min and max labels.}

\item{from_fixed}{Fix position of left (or single) handle.}

\item{to_fixed}{Fix position of right handle.}

\item{from_min}{Set minimum limit for left handle.}

\item{from_max}{Set the maximum limit for left handle.}

\item{to_min}{Set minimum limit for right handle.}

\item{to_max}{Set the maximum limit for right handle.}

\item{force_edges}{Slider will be always inside it's container.}

\item{width}{The width of the input, e.g. \code{400px}, or \code{100\%}.}

\item{pre}{A prefix string to put in front of the value.}

\item{post}{A suffix string to put after the value.}

\item{dragRange}{See the same argument in \code{\link[shiny]{sliderInput}}.}
}
\value{
The value retrieved server-side is a numeric value.
}
\description{
Constructs a slider widget with numeric values and character labels
}
\examples{
\dontrun{

if (interactive()) {

library("shiny")
library("shinyWidgets")

my_choices = 1:12
names(my_choices) = month.name

ui <- fluidPage(
  br(),
  sliderLabelInput(
    inputId = "mySliderLabels",
    label = "Month range slider:",
    choices = my_choices,
    selected = my_choices[c(4, 7)]
  ),
  verbatimTextOutput(outputId = "result")
)

server <- function(input, output, session) {
  output$result <- renderPrint(str(input$mySliderLabels))
}

shinyApp(ui = ui, server = server)

}

}
}
\seealso{
\link{updateSliderLabelInput} to update value server-side.
}
